{"version":3,"sources":["components/RegistrationSteps.jsx","components/DragDrop.jsx","utils/validationType.jsx","components/RegistrationWindow.jsx","components/Title.jsx","App.js","serviceWorker.js","index.js"],"names":["RegStepsContainer","styled","div","RegCircle","RegCircleNumber","p","RegCircleSelected","CustomHRtag","RegSteps","DragDropSection","DragDrop","props","files","onDrop","useCallback","acceptedFiles","push","length","reduce","sum","curr","fileLoadHandler","useDropzone","getRootProps","getInputProps","className","counter","checkValue","value","test","MainWindow","MainWrapper","Form","form","CompanyContainer","Wrapper","PTag","CompanyInputTag","input","NumberInputTag","numberError","NumberError","BussinessContainer","BussinessInputTag","bussArea","BussinessNameError","DescriptionContainer","DescriptionTextarea","textarea","description","DescriptionError","ButtonSection","Button","ButtonText","RegWindow","useState","setCounter","companyName","NumOfPeople","inputValue","setInputValue","error","setError","onChange","e","target","name","placeholder","isError","console","log","type","onClick","alert","MainTitle","Title","GlobalStyle","createGlobalStyle","WrapperHTML","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0197b2fe.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const RegStepsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  width: 700px;\n  @media (max-width: 623px) {\n    width: 310px;\n  }\n`;\nexport const RegCircle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background: #1e34a5;\n  margin: 0 10px 0 10px;\n`;\n\nexport const RegCircleNumber = styled.p`\n  font-family: \"Open Sans\";\n  font-size: 20px;\n  color: #fff;\n`;\n\nexport const RegCircleSelected = styled(RegCircle)`\n  background: #da3f5b;\n`;\n\nexport const CustomHRtag = styled.div`\n  width: 30%;\n  border: 1px grey solid;\n  @media (max-width: 623px) {\n    width: 20%;\n  }\n`;\n\n// i should use map here\n\nconst RegSteps = () => {\n  return (\n    <RegStepsContainer>\n      <RegCircle>\n        <RegCircleNumber>1</RegCircleNumber>\n      </RegCircle>\n      <CustomHRtag />\n      <RegCircle>\n        <RegCircleNumber>2</RegCircleNumber>\n      </RegCircle>\n      <CustomHRtag />\n      <RegCircleSelected>\n        <RegCircleNumber>3</RegCircleNumber>\n      </RegCircleSelected>\n    </RegStepsContainer>\n  );\n};\nexport default RegSteps;\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport styled from \"styled-components\";\n\nexport const DragDropSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border: 0.65015px dotted #333333;\n  box-sizing: border-box;\n  border-radius: 10px;\n  margin-top: 40px;\n  padding: 0 10px;\n  cursor: pointer;\n`;\n\nconst DragDrop = props => {\n  const files = [];\n  const onDrop = useCallback(acceptedFiles => {\n    files.push(acceptedFiles.length);\n    const reduce = files.reduce(function(sum, curr) {\n      return sum + curr;\n    }, 0);\n    props.fileLoadHandler(reduce);\n    // eslint-disable-next-line\n  }, []);\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop\n  });\n\n  return (\n    <DragDropSection {...getRootProps()} onDrop={onDrop}>\n      <input {...getInputProps()} />\n\n      <p className=\"dropzone-content\">Add file as attachment</p>\n\n      <p>You uploaded {props.counter} files</p>\n    </DragDropSection>\n  );\n};\nexport default DragDrop;\n","export const checkValue = value => value > 0 && /^\\d{1,2}$/.test(value);\n","import React, { useState } from \"react\";\nimport DragDrop from \"./DragDrop\";\nimport styled from \"styled-components\";\nimport { checkValue } from \"../utils/validationType\";\n\nexport const MainWindow = styled.div`\n  display: flex;\n  width: 608px;\n  background: #fff;\n  border-radius: 8px;\n  justify-content: center;\n  @media (max-width: 623px) {\n    width: 100%;\n  }\n`;\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Form = styled.form`\n  margin: 0;\n  padding-top: 20px;\n  font-family: \"Open Sans\";\n`;\n\nexport const CompanyContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  @media (max-width: 623px) {\n    justify-content: space-around;\n  }\n  @media (max-width: 425px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const PTag = styled.p`\n  font-family: \"Open Sans\";\n  font-size: 14px;\n  line-height: 100%;\n  color: #636363;\n  @media (max-width: 425px) {\n    text-align: center;\n  }\n`;\n\nexport const CompanyInputTag = styled.input`\n  background: #f9f9f9;\n  border-radius: 8px;\n  border: 1px solid #c7c7c7;\n  width: 280px;\n  height: 48px;\n  font-size: 20px;\n  padding: 0 10px;\n  outline-width: 0;\n  @media (max-width: 623px) {\n    width: 160px;\n  }\n  @media (max-width: 425px) {\n    width: 90%;\n  }\n`;\n\nexport const NumberInputTag = styled(CompanyInputTag)`\n  width: 178px;\n  height: 48px;\n  ${({ numberError }) => numberError && `border: 1px solid #F15557;`}\n`;\n\nexport const NumberError = styled.p`\n  display: none;\n  font-size: 10px;\n  color: red;\n  ${({ numberError }) => numberError && `display: block; margin:0;`}\n`;\n\nexport const BussinessContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 10px;\n  @media (max-width: 623px) {\n    align-items: center;\n  }\n`;\n\nexport const BussinessInputTag = styled(CompanyInputTag)`\n  width: 496px;\n  height: 48px;\n  @media (max-width: 623px) {\n    width: 80%;\n  }\n  ${({ bussArea }) => bussArea && `border: 1px red solid`}\n`;\nexport const BussinessNameError = styled.p`\n  display: none;\n  font-size: 10px;\n  color: red;\n  ${({ bussArea }) => bussArea && `display: block; margin:0;`}\n`;\n\nexport const DescriptionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 10px;\n  @media (max-width: 623px) {\n    align-items: center;\n  }\n`;\n\nexport const DescriptionTextarea = styled.textarea`\n  width: 496px;\n  height: 168px;\n  background: #f9f9f9;\n  border-radius: 8px;\n  border: 1px solid #c7c7c7;\n  font-size: 20px;\n  padding: 16px 12px;\n  resize: none;\n  outline-width: 0;\n  @media (max-width: 623px) {\n    align-items: center;\n    width: 80%;\n  }\n  ${({ description }) => description && `border: 1px red solid`}\n`;\nexport const DescriptionError = styled.p`\n  display: none;\n  font-size: 10px;\n  color: red;\n  ${({ description }) => description && `display: block;margin: 0`}\n`;\n\nexport const ButtonSection = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  @media (max-width: 400px) {\n    justify-content: center;\n  }\n`;\n\nexport const Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 144px;\n  height: 56px;\n  background: #da3f5b;\n  border-radius: 8px;\n  margin-top: 58px;\n  user-select: none;\n  cursor: pointer;\n`;\n\nexport const ButtonText = styled.p`\n  font-family: \"Open Sans\";\n  font-style: normal;\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 22px;\n  color: #ffffff;\n`;\n\nfunction RegWindow() {\n  const [counter, setCounter] = useState(0);\n  const [inputValue, setInputValue] = useState({\n    companyName: \"\",\n    NumOfPeople: \"\",\n    bussArea: \"\",\n    description: \"\"\n  });\n  const [error, setError] = useState({\n    NumOfPeople: \"\",\n    bussArea: \"\",\n    description: \"\"\n  });\n\n  const fileLoadHandler = props => {\n    setCounter(props);\n    console.log(props);\n  };\n\n  const onSubmit = () => {\n    if (\n      !error.NumOfPeople &&\n      !error.bussArea &&\n      !error.description &&\n      inputValue.NumOfPeople !== \"\" &&\n      inputValue.bussArea !== \"\" &&\n      inputValue.description !== \"\"\n    ) {\n      return alert(\n        `\\n Company name - ${inputValue.companyName},\\n Number of People - ${inputValue.NumOfPeople},\\n Bussiness Area - ${inputValue.bussArea},\\n Description - ${inputValue.description},\\n Uploaded files - ${counter}`\n      );\n    } else {\n      return alert(\"error\");\n    }\n  };\n\n  const NumOfPeopleValidation = e => {\n    setInputValue({\n      ...inputValue,\n      NumOfPeople: e.target.value\n    });\n    const isError = checkValue(e.target.value);\n    return setError({ ...error, NumOfPeople: !isError });\n  };\n\n  return (\n    <MainWindow>\n      <MainWrapper>\n        <Form>\n          <CompanyContainer>\n            <Wrapper>\n              <PTag>Your company name</PTag>\n              <CompanyInputTag\n                onChange={e =>\n                  setInputValue({ ...inputValue, companyName: e.target.value })\n                }\n                name=\"company\"\n                placeholder=\" Type Text\"\n              />\n            </Wrapper>\n            <Wrapper>\n              <PTag>Number of people*</PTag>\n              <NumberInputTag\n                onChange={NumOfPeopleValidation}\n                placeholder=\"1-99\"\n                numberError={error.NumOfPeople}\n              />\n              <NumberError numberError={error.NumOfPeople}>\n                Put Number from 1 to 99\n              </NumberError>\n            </Wrapper>\n          </CompanyContainer>\n          <BussinessContainer>\n            <PTag>Bussiness area*</PTag>\n            <BussinessInputTag\n              placeholder=\"Design, Development, etc.\"\n              bussArea={error.bussArea}\n              onChange={e =>\n                e.target.value === \"\"\n                  ? setError({ ...error, bussArea: true })\n                  : setInputValue({\n                      ...inputValue,\n                      bussArea: e.target.value\n                    }) || setError({ ...error, bussArea: false })\n              }\n            />\n            <BussinessNameError bussArea={error.bussArea}>\n              Put info\n            </BussinessNameError>\n          </BussinessContainer>\n          <DescriptionContainer>\n            <PTag>Description*</PTag>\n            <DescriptionTextarea\n              placeholder=\"Type Text\"\n              description={error.description}\n              onChange={e =>\n                e.target.value === \"\"\n                  ? setError({ ...error, description: true })\n                  : setInputValue({\n                      ...inputValue,\n                      description: e.target.value\n                    }) || setError({ ...error, description: false })\n              }\n            />\n            <DescriptionError description={error.description}>\n              Put info\n            </DescriptionError>\n          </DescriptionContainer>\n\n          <DragDrop counter={counter} fileLoadHandler={fileLoadHandler} />\n\n          <ButtonSection>\n            <Button type=\"submit\" onClick={onSubmit}>\n              <ButtonText>Submit</ButtonText>\n            </Button>\n          </ButtonSection>\n        </Form>\n      </MainWrapper>\n    </MainWindow>\n  );\n}\n\nexport default RegWindow;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nexport const MainTitle = styled.p`\n  font-family: \"Open Sans\";\n  font-style: normal;\n  font-weight: bold;\n  font-size: 40px;\n  line-height: 64px;\n  color: #fff;\n  margin: 0 0 20px 0;\n  padding: 30px 0 0 0;\n\n  @media (max-width: 623px) {\n    font-size: 30px;\n    margin-top: 20px;\n  }\n`;\n\nfunction Title() {\n  return <MainTitle>Your first project</MainTitle>;\n}\nexport default Title;\n","import React from \"react\";\nimport RegSteps from \"./components/RegistrationSteps\";\nimport RegWindow from \"./components/RegistrationWindow\";\nimport Title from \"./components/Title\";\n\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    display: flex;\n  flex-direction: column;\n  align-items: center;\n  width:100vw;\n  height:100vh;\n  margin: 0;\n  padding: 0;\n  background: linear-gradient(233.1deg, #216190 19.65%, #0834d0 81.25%);\n    @media (max-width: 860px) {\n      height: 120vh;\n    }\n  }\n`;\n\nexport const WrapperHTML = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0;\n  padding: 0 0 30px 0;\n`;\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <WrapperHTML>\n        <Title />\n        <RegSteps />\n        <RegWindow />\n      </WrapperHTML>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}